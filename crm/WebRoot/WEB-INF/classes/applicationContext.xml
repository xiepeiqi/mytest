<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context.xsd
	http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop.xsd
	http://www.springframework.org/schema/tx 
	http://www.springframework.org/schema/tx/spring-tx.xsd">
	
	
	<!-- 导入分离的spring文件 -->
	<!-- 1）、一个一个文件导入 -->
	<!-- <import resource="applicationContext-action.xml"/>
	<import resource="applicationContext-service.xml"/>
	<import resource="applicationContext-dao.xml"/> -->
	
	<!-- 2）、通配的方式导入 -->
	<import resource="applicationContext-*.xml"/>
	
	
	
	
	<!-- 1、创建数据源 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="jdbcUrl" value="jdbc:mysql:///itheimacrm"></property>
		<property name="driverClass" value="com.mysql.jdbc.Driver"></property>
		<property name="user" value="root"></property>
		<property name="password" value="passw0rd"></property>
	</bean>
	
	<!-- 2、创建SessionFactory -->
	<bean id="localSessionFactoryBean" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
		<!-- 注入数据源 -->
		<property name="dataSource" ref="dataSource"></property>
		<!-- 扩展参数 -->
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.format_sql">true</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
			</props>
		</property>
		<!-- 映射文件参数 -->
		<property name="mappingResources">
			<list>
				<value>gz/itheima/crm/entity/User.hbm.xml</value>
				<value>gz/itheima/crm/entity/Customer.hbm.xml</value>
				<value>gz/itheima/crm/entity/Linkman.hbm.xml</value>
				<value>gz/itheima/crm/entity/Log.hbm.xml</value>
			</list>
		</property>
	</bean>
	
	<!-- 3、创建HibernateTemplate -->
	<bean id="hibernateTemplate" class="org.springframework.orm.hibernate5.HibernateTemplate">
		<property name="sessionFactory" ref="localSessionFactoryBean"></property>
	</bean>
	
	<!-- 6、开启事务切面 -->
	<!-- 1）创建事务管理器 -->
	<bean id="transactionManager" class="org.springframework.orm.hibernate5.HibernateTransactionManager">
		<!-- 注入数据源 
			另一种引入的方式： value="#{dataSource}"
		-->
		<!-- 
			jdbc:使用这种
				<property name="dataSource" ref="dataSource"></property>
		 -->
		<property name="sessionFactory" ref="localSessionFactoryBean"></property>
	</bean>
	
	<!-- 2）创建通知 -->
	<tx:advice id="myTXAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="save*" propagation="REQUIRED"/>
			<tx:method name="update*" propagation="REQUIRED"/>
			<tx:method name="delete*" propagation="REQUIRED"/>
			<tx:method name="find*" propagation="SUPPORTS" read-only="true"/>
		</tx:attributes>
	</tx:advice>
	
	<!-- 3）创建切面 -->
	<aop:config>
		<aop:advisor advice-ref="myTXAdvice" pointcut="execution(* gz.itheima.crm.service.impl.*ServiceImpl.*(..))"/>
	</aop:config>
	
	
	<!-- 日志统计模块 -->
	<!-- 1、编写日志切面类 -->
	<bean id="logAspact" class="gz.itheima.crm.util.LogAspact">
		<property name="logService" ref="logService"></property>
	</bean>
	
	<!-- 2、配置切面 -->
	<aop:config>
		<aop:aspect ref="logAspact">
			<aop:before method="log" pointcut="execution(* gz.itheima.crm.service.impl.*ServiceImpl.save*(..))"/>
			<aop:before method="log" pointcut="execution(* gz.itheima.crm.service.impl.*ServiceImpl.delete*(..))"/>
			<aop:before method="log" pointcut="execution(* gz.itheima.crm.service.impl.*ServiceImpl.update*(..))"/>
		</aop:aspect>
	</aop:config>
	
	
	
	
	
	
	


</beans>